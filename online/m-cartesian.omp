;fileheader
; (5.01 :patc (om-make-point 216 63) (om-make-point 174 436) (om-make-point 671 491) "non documentation" 183)
;endfileheader
(in-package :om)(load-lib-for '("ma-lib"))(setf *om-current-persistent* (om-load-patch1 "m-cartesian" '((om-load-boxcall 'abstraction "mypatch" (om-load-patch-abs1 "mypatch" '((om-load-boxcall 'genfun "OM*" 'om* '((om-load-inputfun 'input-funbox "first input" "SELF" 0) (om-load-inputfun 'input-funbox "second input" "NUM" 0)) (om-make-point 179 146) (om-make-point 76 35) nil nil nil 1) (om-load-boxcall 'lispfun "LIST" 'list '((om-load-inputfun 'input-funbox "add-input" "add-input" nil) (om-load-inputfun 'input-funbox "add-input" "add-input" nil)) (om-make-point 87 188) (om-make-point 71 39) nil nil nil 1) (om-load-boxout "output" 0 (om-make-point 95 288) '((om-load-inputfun 'input-funbox "out" "out" nil)) nil nil) (om-load-boxin "input1" 1 (om-make-point 192 51) "no documentation" nil nil (om-make-point 34 55)) (om-load-boxin "input" 0 (om-make-point 57 63) "no documentation" nil nil nil)) '((3 0 0 0 nil 0) (3 0 0 1 nil 0) (4 0 1 0 nil 0) (0 0 1 1 nil 0) (1 0 2 0 nil 0)) 5.01 nil) '((om-load-inputfun 'input-funbox "no documentation" "input" nil) (om-load-inputfun 'input-funbox "no documentation" "input1" nil)) (om-make-point 471 191) nil nil "l" nil) (om-load-boxcall 'genfun "M-CARTESIAN" 'mfl::m-cartesian '((om-load-inputfun 'input-funbox "list1" "LIST1" (list 'mfl::a 'mfl::b 'mfl::c)) (om-load-inputfun 'input-funbox "list2" "LIST2" (list 1 2 3)) (om-load-inputfun 'input-funbox "symbol function" "FUNCT" 'list)) (om-make-point 339 277) (om-make-point 104 63) nil nil nil 1) (om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 299 197) (om-make-point 81 29) (list 'a 'b 'c) "(a b c)" nil) (om-load-boxcall 'bastype "aux1" 't 'nil (om-make-point 394 197) (om-make-point 40 22) (list 1 2 3) "(1 2 3)" nil) (om-load-boxcall 'bastype "aux2" 't 'nil (om-make-point 211 196) (om-make-point 32 22) 'list "list" nil) (om-load-boxcall 'bastype "aux1" 't 'nil (om-make-point 158 195) (om-make-point 40 22) (list 1 2 3) "(1 2 3)" nil) (om-load-boxcall 'bastype "aux" 't 'nil (om-make-point 63 195) (om-make-point 81 29) (list 'a 'b 'c) "(a b c)" nil) (om-load-boxcall 'genfun "M-CARTESIAN" 'mfl::m-cartesian '((om-load-inputfun 'input-funbox "list1" "LIST1" (list 'mfl::a 'mfl::b 'mfl::c)) (om-load-inputfun 'input-funbox "list2" "LIST2" (list 1 2 3)) (om-load-inputfun 'input-funbox "symbol function" "FUNCT" 'list)) (om-make-point 107 269) (om-make-point 104 63) nil nil nil 1) (om-load-boxcomment "comment1" (om-make-point 336 63) '"cartesian product between two list with a user defined function" "" (om-make-point 110 95) nil (om-make-color 0 0 0) (om-make-font "Arial" 24 :family nil :style 'nil :mode '(:srcor))) (om-load-boxcomment "comment" (om-make-point 281 65) '"m-cartesian" "" (om-make-point 140 28) nil (om-make-color 0 0 0) (om-make-font "Arial" 48 :family nil :style 'nil :mode '(:srcor)))) '((2 0 1 0 nil 0) (3 0 1 1 nil 0) (0 0 1 2 nil 0) (6 0 7 0 nil 0) (5 0 7 1 nil 0) (4 0 7 2 nil 0)) nil 5.01))


